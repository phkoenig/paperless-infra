#!/bin/bash
# üîÑ TABULA RASA - Vollst√§ndiger System-Reset (Bash Version)
# ===========================================================
# 
# Dieses Skript setzt das gesamte Paperless-System auf Null zur√ºck:
# - Supabase Datenbank leeren
# - Paperless-NGX Dokumente l√∂schen  
# - Google Drive Ordner leeren (manuell)
# - Server Ordner leeren
# - Docker Logs zur√ºcksetzen
#
# Verwendung:
#     bash scripts/tabula-rasa-reset.sh [--confirm]
#     
#     --confirm: Best√§tigt die Ausf√ºhrung (verhindert versehentliche L√∂schung)

set -e  # Exit on any error

# Farben f√ºr Output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Server Configuration
SERVER_HOST="paperless"
SERVER_PATH="/home/ubuntu/paperless-infra"

print_banner() {
    echo -e "${RED}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                    üîÑ TABULA RASA RESET                     ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë  ‚ö†Ô∏è  WARNUNG: Dieses Skript l√∂scht ALLE Daten!              ‚ïë"
    echo "‚ïë  üìã Supabase, Paperless, Google Drive, Server               ‚ïë"
    echo "‚ïë  üóëÔ∏è  Alle Dokumente, Ordner, Logs werden gel√∂scht          ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

run_ssh_command() {
    local command="$1"
    local description="$2"
    
    echo -e "${BLUE}üîÑ $description...${NC}"
    
    if ssh "$SERVER_HOST" "$command"; then
        echo -e "${GREEN}‚úÖ $description - Erfolgreich${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $description - Fehler${NC}"
        return 1
    fi
}

reset_supabase() {
    echo -e "\n${YELLOW}üóÑÔ∏è  SUPABASE DATENBANK LEEREN${NC}"
    echo "=================================================="
    
    echo -e "${YELLOW}‚ö†Ô∏è  MANUELLE AUSF√úHRUNG ERFORDERLICH!${NC}"
    echo
    echo "üìã F√ºhre diese SQL-Befehle in Supabase aus:"
    echo "   DELETE FROM paperless_documents_index;"
    echo "   DELETE FROM email_filter_decisions;"
    echo "   DELETE FROM email_whitelist WHERE id > 0;"
    echo "   DELETE FROM email_blacklist WHERE id > 0;"
    echo
    echo "üîó Supabase Dashboard: https://supabase.com/dashboard/project/jpmhwyjiuodsvjowddsm"
    echo
    
    read -p "‚è∏Ô∏è  Dr√ºcke Enter wenn Supabase geleert wurde..."
}

reset_paperless() {
    echo -e "\n${YELLOW}üìÑ PAPERLESS-NGX LEEREN${NC}"
    echo "=================================================="
    
    # Alle Dokumente l√∂schen
    run_ssh_command \
        "cd $SERVER_PATH && docker compose -f infra/docker-compose.yml exec paperless-webserver python manage.py shell -c \"from documents.models import Document; Document.objects.all().delete(); print('Alle Dokumente gel√∂scht')\"" \
        "Paperless Dokumente l√∂schen"
    
    # Alle Tags l√∂schen (au√üer Standard)
    run_ssh_command \
        "cd $SERVER_PATH && docker compose -f infra/docker-compose.yml exec paperless-webserver python manage.py shell -c \"from documents.models import Tag; Tag.objects.exclude(name__in=['important', 'archive']).delete(); print('Tags gel√∂scht')\"" \
        "Paperless Tags l√∂schen"
    
    # Alle Correspondents l√∂schen
    run_ssh_command \
        "cd $SERVER_PATH && docker compose -f infra/docker-compose.yml exec paperless-webserver python manage.py shell -c \"from documents.models import Correspondent; Correspondent.objects.all().delete(); print('Correspondents gel√∂scht')\"" \
        "Paperless Correspondents l√∂schen"
    
    # Alle Document Types l√∂schen
    run_ssh_command \
        "cd $SERVER_PATH && docker compose -f infra/docker-compose.yml exec paperless-webserver python manage.py shell -c \"from documents.models import DocumentType; DocumentType.objects.all().delete(); print('Document Types gel√∂scht')\"" \
        "Paperless Document Types l√∂schen"
}

reset_google_drive() {
    echo -e "\n${YELLOW}‚òÅÔ∏è  GOOGLE DRIVE ORDNER${NC}"
    echo "=================================================="
    echo -e "${YELLOW}‚ö†Ô∏è  MANUELLE AUSF√úHRUNG ERFORDERLICH!${NC}"
    echo
    echo "üìã F√ºhre diese Schritte in Google Drive aus:"
    echo
    echo "üîµ Account 1: philip@zepta.com (ZEPTA)"
    echo "   1. Gehe zu Google Drive"
    echo "   2. Suche nach: 'Paperless-Emails'"
    echo "   3. L√∂sche ALLE Ordner in diesem Ordner"
    echo "   4. Suche nach: 'Paperless-Attachments'"
    echo "   5. L√∂sche ALLE Ordner in diesem Ordner"
    echo
    echo "üîµ Account 2: phkoenig@gmail.com (PRIVAT)"
    echo "   1. Wechsle zu phkoenig@gmail.com"
    echo "   2. Wiederhole die gleichen Schritte"
    echo
    
    read -p "‚è∏Ô∏è  Dr√ºcke Enter wenn Google Drive geleert wurde..."
}

reset_server() {
    echo -e "\n${YELLOW}üñ•Ô∏è  SERVER ORDNER LEEREN${NC}"
    echo "=================================================="
    
    # Consume Ordner leeren
    run_ssh_command "rm -rf /opt/paperless/consume/emails/*" "Emails Ordner leeren"
    run_ssh_command "rm -rf /opt/paperless/consume/emails_pdf/*" "PDFs Ordner leeren"
    run_ssh_command "rm -rf /opt/paperless/consume/gdrive-office/*" "gdrive-office Ordner leeren"
    run_ssh_command "rm -rf /opt/paperless/consume/gdrive-philip/*" "gdrive-philip Ordner leeren"
    
    # Docker Container neu starten
    run_ssh_command "cd $SERVER_PATH && docker compose -f infra/docker-compose.yml restart" "Docker Container neu starten"
    
    # Warten bis Services bereit sind
    echo -e "${BLUE}‚è≥ Warte 30 Sekunden bis Services bereit sind...${NC}"
    sleep 30
}

reset_docker_logs() {
    echo -e "\n${YELLOW}üê≥ DOCKER LOGS ZUR√úCKSETZEN${NC}"
    echo "=================================================="
    
    # Docker System bereinigen
    run_ssh_command "docker system prune -f" "Docker System bereinigen"
    
    # Container Logs zur√ºcksetzen
    run_ssh_command "cd $SERVER_PATH && docker compose -f infra/docker-compose.yml logs --tail=0 > /dev/null 2>&1 || true" "Docker Logs zur√ºcksetzen"
}

verify_reset() {
    echo -e "\n${YELLOW}‚úÖ VERIFICATION${NC}"
    echo "=================================================="
    
    # Paperless Check
    run_ssh_command \
        "cd $SERVER_PATH && docker compose -f infra/docker-compose.yml exec paperless-webserver python manage.py shell -c \"from documents.models import Document; print(f'Paperless Documents: {Document.objects.count()}')\"" \
        "Paperless Dokumente z√§hlen"
    
    # Server Ordner Check
    run_ssh_command \
        "find /opt/paperless/consume -maxdepth 2 -type f | wc -l" \
        "Server Dateien z√§hlen"
    
    # Docker Status
    run_ssh_command \
        "cd $SERVER_PATH && docker compose -f infra/docker-compose.yml ps" \
        "Docker Container Status"
}

main() {
    # Argumente pr√ºfen
    if [[ "$1" != "--confirm" ]]; then
        echo -e "${RED}‚ùå FEHLER: --confirm Flag erforderlich!${NC}"
        echo "   Verwendung: bash scripts/tabula-rasa-reset.sh --confirm"
        echo -e "   ${YELLOW}‚ö†Ô∏è  Dies verhindert versehentliche L√∂schung aller Daten!${NC}"
        exit 1
    fi
    
    print_banner
    
    echo -e "${BLUE}üïê Start: $(date)${NC}"
    echo
    
    # Reset-Sequenz
    reset_supabase
    reset_paperless
    reset_google_drive
    reset_server
    reset_docker_logs
    verify_reset
    
    echo -e "\n${GREEN}üéâ TABULA RASA ABGESCHLOSSEN!${NC}"
    echo -e "${BLUE}üïê Ende: $(date)${NC}"
    echo
    echo -e "${YELLOW}üìã N√ÑCHSTE SCHRITTE:${NC}"
    echo "   1. F√ºhre Apps Script 'exportToPaperless' aus"
    echo "   2. Warte auf rclone Sync (ca. 5 Min)"
    echo "   3. Warte auf eml2pdf Konvertierung"
    echo "   4. √úberpr√ºfe Paperless-NGX f√ºr neue Dokumente"
}

# Script ausf√ºhren
main "$@"
